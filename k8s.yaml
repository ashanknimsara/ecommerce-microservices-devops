#########################################################
# Common Environment variables ConfigMap
#########################################################
apiVersion: v1
kind: ConfigMap
metadata:
  name: common-env
data:
  NAMESPACE: ""
  LOGLEVEL: info
  SERVICEDIR: services
  TRANSPORTER: nats://nats:4222
  
  CACHER: Memory
  
  MONGO_URI: mongodb+srv://ashanknimsara:4Jpl083o4rj3vR2J@cluster0.3ciifpt.mongodb.net/ecommerce-db?retryWrites=true&w=majority&appName=Cluster0

---
#########################################################
# Service for Moleculer API Gateway service
#########################################################
apiVersion: v1
kind: Service
metadata:
  name: api
spec:
  selector:
    app: api
  ports:
  - port: 3000
    targetPort: 3000

---
#########################################################
# Ingress for Moleculer API Gateway
#########################################################
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  annotations:
  kubernetes.io/ingress.class: nginx
spec:
  rules:
  - host: nodedeploy-dns-b98le466.hcp.eastus.azmk8s.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api
            port:
              number: 3000

---
#########################################################
# API Gateway service
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
spec:
  selector:
    matchLabels:
      app: api
  replicas: 2
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: ashanknimsara/ecommerce-microservices-devops
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: common-env
        env:
          - name: SERVICES
            value: api

---
#########################################################
# Users service
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users
spec:
  selector:
    matchLabels:
      app: users
  replicas: 2
  template:
    metadata:
      labels:
        app: users
    spec:
      containers:
      - name: users
        image: ashanknimsara/ecommerce-microservices-devops
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: common-env
        env:
          - name: SERVICES
            value: users

---
#########################################################
# Products service
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: products
spec:
  selector:
    matchLabels:
      app: products
  replicas: 2
  template:
    metadata:
      labels:
        app: products
    spec:
      containers:
      - name: products
        image: ashanknimsara/ecommerce-microservices-devops
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: common-env
        env:
          - name: SERVICES
            value: products

---

#########################################################
# Orders service
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders
spec:
  selector:
    matchLabels:
      app: orders
  replicas: 2
  template:
    metadata:
      labels:
        app: orders
    spec:
      containers:
      - name: orders
        image: ashanknimsara/ecommerce-microservices-devops
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: common-env
        env:
          - name: SERVICES
            value: orders

---

#########################################################
# Categories service
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: categories
spec:
  selector:
    matchLabels:
      app: categories
  replicas: 2
  template:
    metadata:
      labels:
        app: categories
    spec:
      containers:
      - name: categories
        image: ashanknimsara/ecommerce-microservices-devops
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: common-env
        env:
          - name: SERVICES
            value: categories

---
#########################################################
# MongoDB server
#########################################################
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  labels:
    app: mongo
spec:
  selector:
    matchLabels:
      app: mongo
  replicas: 1
  serviceName: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - image: mongo
          name: mongo
          ports:
            - containerPort: 27017
          resources: {}
          volumeMounts:
            - mountPath: /data/db
              name: mongo-data
      volumes:
        - name: mongo-data
          persistentVolumeClaim:
            claimName: mongo-data

---
#########################################################
# Persistent volume for MongoDB
#########################################################
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-data
  labels:
    name: mongo-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
#########################################################
# MongoDB service
#########################################################
apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:
    app: mongo
spec:
  ports:
    - port: 27017
      targetPort: 27017
  selector:
    app: mongo          


---
#########################################################
# NATS transporter service
#########################################################
apiVersion: v1
kind: Service
metadata:
  name: nats
spec:
  selector:
    app: nats
  ports:
  - port: 4222
    name: nats
    targetPort: 4222

---
#########################################################
# NATS transporter
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nats
spec:
  selector:
    matchLabels:
      app: nats
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: nats
    spec:
      containers:
      - name: nats
        image: nats
        ports:
        - containerPort: 4222
          name: nats